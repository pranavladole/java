credit card mask first digits
123445435435
XXXX-XXXX-XXXX-5435  

public class Solution {
    public static String maskCreditCard(String creditCardNumber) {
         if(creditCardNumber.length()==16 ){
            char[] charArray = creditCardNumber.toCharArray();
            for(int i=0;i<12;i++){
                charArray[i] = 'X';
            }
             int[] dashPositions = {4, 8, 12};
             char[] newArray = new char[charArray.length + dashPositions.length];
             
             
        int originalIndex = 0, newIndex = 0;

        for (int i = 1; i <= charArray.length; i++) {
            newArray[newIndex++] = charArray[originalIndex++];

            // Check if current position matches any dash position
            for (int pos : dashPositions) {
                if (i == pos) {
                    newArray[newIndex++] = '-';
                    break; // Exit loop once a match is found
                }
            }
        }   
                return new String(newArray);
         }else{
            return "Invalid credit card number. It must be 16 digits long.";
      //  System.out.println("Invalid credit card number. It must be 16 digits long.");     
         }
 


    }
}
//

converting alternate character to upper case
public class Solution {
    public static String toSpongeCase(String input) {
     char[] result = input.toCharArray();
     for(int i=0;i<input.length();i++){
         if(i%2!=0){
             result[i] =  Character.toUpperCase(result[i]); 
         }
     }
     return new String(result);
    }
}
